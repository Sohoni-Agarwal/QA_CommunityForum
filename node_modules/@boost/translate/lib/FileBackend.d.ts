import i18next from 'i18next';
import { Contract, Path, Predicates } from '@boost/common';
import { Locale, Format } from './types';
export interface FileBackendOptions {
    format?: Format;
    paths?: Path[];
}
export default class FileBackend extends Contract<FileBackendOptions> implements i18next.BackendModule {
    fileCache: {
        [path: string]: i18next.ResourceKey;
    };
    type: 'backend';
    init(services: unknown, options: Partial<FileBackendOptions>): void;
    blueprint({ array, string }: Predicates): {
        format: import("optimal").StringBuilder<Format>;
        paths: import("optimal").ArrayBuilder<string>;
    };
    create(): void;
    read(locale: Locale, namespace: string, callback: (error: Error | null, resources: i18next.Resource) => void): i18next.ResourceKey;
}
//# sourceMappingURL=FileBackend.d.ts.map