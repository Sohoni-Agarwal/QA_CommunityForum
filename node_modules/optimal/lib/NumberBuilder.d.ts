import Builder from './Builder';
export default class NumberBuilder<T extends number = number> extends Builder<T> {
    constructor(defaultValue?: T);
    between(min: number, max: number, inclusive?: boolean): this;
    checkBetween(path: string, value: T, min: number, max: number, inclusive?: boolean): void;
    gt(min: number, inclusive?: boolean): this;
    gte(min: number): this;
    checkGreaterThan(path: string, value: T, min: number, inclusive?: boolean): void;
    lt(max: number, inclusive?: boolean): this;
    lte(max: number): this;
    checkLessThan(path: string, value: T, max: number, inclusive?: boolean): void;
    oneOf<U extends number>(list: U[]): NumberBuilder<U>;
    checkOneOf(path: string, value: T, list: T[]): void;
}
export declare function number<T extends number = number>(defaultValue?: number): NumberBuilder<T>;
