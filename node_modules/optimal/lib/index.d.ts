/**
 * @copyright   2017-2019, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
import optimal from './optimal';
import Builder, { bool, custom, func } from './Builder';
import ArrayBuilder, { array } from './ArrayBuilder';
import InstanceBuilder, { builder, instance, date, regex } from './InstanceBuilder';
import NumberBuilder, { number } from './NumberBuilder';
import ObjectBuilder, { object, blueprint } from './ObjectBuilder';
import ShapeBuilder, { shape } from './ShapeBuilder';
import StringBuilder, { string } from './StringBuilder';
import UnionBuilder, { union } from './UnionBuilder';
export declare const predicates: {
    array: typeof array;
    blueprint: typeof blueprint;
    bool: typeof bool;
    builder: typeof builder;
    custom: typeof custom;
    date: typeof date;
    func: typeof func;
    instance: typeof instance;
    number: typeof number;
    object: typeof object;
    regex: typeof regex;
    shape: typeof shape;
    string: typeof string;
    union: typeof union;
};
export { array, blueprint, bool, builder, custom, date, func, instance, number, object, regex, shape, string, union, };
export { Builder, ArrayBuilder, InstanceBuilder, NumberBuilder, ObjectBuilder, ShapeBuilder, StringBuilder, UnionBuilder, };
export declare type Predicates = typeof predicates;
export * from './types';
export default optimal;
