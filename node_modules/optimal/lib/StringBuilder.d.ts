import Builder from './Builder';
export default class StringBuilder<T extends string = string> extends Builder<T> {
    constructor(defaultValue?: T);
    contains(token: string, index?: number): this;
    checkContains(path: string, value: T, token: string, index?: number): void;
    match(pattern: RegExp): this;
    checkMatch(path: string, value: T, pattern: RegExp): void;
    notEmpty(): this;
    checkNotEmpty(path: string, value: T): void;
    oneOf<U extends string>(list: U[]): StringBuilder<U>;
    checkOneOf(path: string, value: T, list: T[]): void;
}
export declare function string<T extends string = string>(defaultValue?: string): StringBuilder<T>;
